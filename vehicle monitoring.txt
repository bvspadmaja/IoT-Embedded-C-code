#include &lt;TinyGPS++.h&gt;
#include &lt;SoftwareSerial.h&gt;
#define BLYNK_PRINT Serial

#include &lt;ESP8266WiFi.h&gt;
#include &lt;BlynkSimpleEsp8266.h&gt;
#include &lt;DHT.h&gt;
static const int RXPin = D1, TXPin = D5;
static const uint32_t GPSBaud = 9600;
double latitude, longitude ;

char auth[] = &quot;fe52b427f3104e26ae1ca348ee85223e&quot;;
char ssid[] = &quot;Tenda&quot;;
char pass[] = &quot;savenever&quot;;

39

#define DHTPIN D4
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

int validGPS = 0;

TinyGPSPlus gps;
SoftwareSerial ss(RXPin, TXPin);

// Your WiFi credentials.
// Set password to &quot;&quot; for open networks.

int gasPin = 0;
int val = 0;

int temperature = 0;
int humidity = 0;
int buzzer = D0;
int IROUT = D2;
int drowsy_state = HIGH;
const int trigPin = D8;
const int echoPin = D7;

40

long duration;
int distance;

void setup()
{
Serial.begin(115200);
ss.begin(GPSBaud);
pinMode(D4, INPUT);
pinMode(gasPin, INPUT);

pinMode(buzzer, OUTPUT);
pinMode(IROUT, INPUT);
pinMode(trigPin, OUTPUT);
pinMode(echoPin, INPUT);

dht.begin();

41

Serial.println(F(&quot;DeviceExample.ino&quot;));
Serial.println(F(&quot;A simple demonstration of TinyGPS++ with an attached GPS module&quot;));
Serial.print(F(&quot;Testing TinyGPS++ library v. &quot;));
Serial.println(TinyGPSPlus::libraryVersion());
Serial.println(F(&quot;by Mikal Hart&quot;));
Serial.println();
Blynk.begin(auth, ssid, pass);
delay(2000);
}

void loop()
{
// Blynk.run();
while (ss.available() &gt; 0)
{
if (gps.encode(ss.read()))
displayInfo();
}

validGPS = 0;

42

}

void displayInfo()
{
Blynk.run();
Serial.print(F(&quot;Location: &quot;));

if (gps.location.isValid())
{
Serial.print(gps.location.lat(), 6);
Serial.print(F(&quot;,&quot;));
Serial.print(gps.location.lng(), 6);
latitude = gps.location.lat(), 6;
longitude = gps.location.lng(), 6;
Blynk.virtualWrite(V1, 1, latitude, longitude, &quot;value&quot;);
validGPS = 1;
}
else
{
Serial.print(F(&quot;INVALID&quot;));
validGPS = 1;
}

43

smartDelay(1000);

Serial.print(&quot;\t Temp:&quot;);

if (validGPS == 1)
{
int t = dht.readTemperature();
if (t &lt; 200)
temperature = t;
t = dht.readHumidity();
if (t &lt; 200)
humidity = t;

Blynk.virtualWrite(V5, temperature);
Blynk.virtualWrite(V6, humidity);
Serial.print(temperature);
Serial.print(&quot;Â°C\tHumidity:&quot;);
Serial.print(humidity);
Serial.print(&quot;%&quot;);

val = analogRead(0) / 2;

44

Serial.print(&quot;\tAlcohol:&quot;);
Serial.print(val);
Blynk.virtualWrite(V4, val);
if (val &gt; 400)
{
Blynk.email(&quot;bvspadmaja90@gmail.com&quot;, &quot;alcohol level&quot;, &quot;HIGH INTAKE&quot;);
Serial.println(&quot;\n***** mail sent ****&quot;);
}
drowsy_state = digitalRead(IROUT);
if (drowsy_state == LOW)
{
Serial.print(&quot;\tdrowsy&quot;);
tone(buzzer, 1000, 200);
Blynk.email(&quot;bvspadmaja90@gmail.com&quot;, &quot;state of the driver&quot;, &quot;drowsystate&quot;);
Serial.println(&quot;\n***** mail sent ****&quot;);
}
else
{
Serial.print(&quot;\tnot drowsy&quot;);
noTone(buzzer);
}
digitalWrite(trigPin, LOW);

45

delayMicroseconds(2);
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);

duration = pulseIn(echoPin, HIGH);

distance = duration * 0.034 / 2;
Serial.print(&quot;\tDistance: &quot;);
Serial.print(distance);
Blynk.virtualWrite(V8, distance);
if (distance &lt; 500)
{
Serial.print(&quot;\tless distance&quot;);
}
Serial.println();
}

smartDelay(1000);
}

46

static void smartDelay(unsigned long ms)
{
unsigned long start = millis();
do
{
while (ss.available())
gps.encode(ss.read());
} while (millis() - start &lt; ms);
}